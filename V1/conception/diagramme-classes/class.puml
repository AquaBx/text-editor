@startuml
interface Command {
    - textEditor : TextEditor&
    + Command(TextEditor& textEditor)
    + ~Command()
    + void execute()
}

class CopyCommand {
    - std::size_t start
    - std::size_t end
    + CopyCommand(\n\tTextEditor& textEditor,\n\t std::size_t start,\n\t std::size_t end\n)
    + ~CopyCommand()
}

class CutCommand {
    - std::size_t start
    - std::size_t end
    + CutCommand(\n\tTextEditor& textEditor,\n\t std::size_t start,\n\t std::size_t end\n)
    + ~CutCommand()
}

class DeleteTextCommand {
    - std::size_t start
    - std::size_t end
    + DeleteTextCommand(\n\tTextEditor& textEditor,\n\t std::size_t start,\n\t std::size_t end\n)
    + ~DeleteTextCommand()
}

class EnterCharCommand {
    - std::size_t start
    - std::size_t end
    - char character
    + EnterCharCommand(\n\tTextEditor& textEditor,\n\t std::size_t start,\n\t std::size_t end,\n\t char character\n)
    + ~EnterCharCommand()
}

class MoveCursorCommand {
    - std::size_t start
    - std::size_t end
    - std::size_t position
    + MoveCursorCommand(\n\tTextEditor& textEditor,\n\t std::size_t position,\n\t std::size_t start,\n\t std::size_t end\n)
    + ~MoveCursorCommand()
}

class PasteCommand {
    - std::size_t start
    - std::size_t end
    + PasteCommand(\n\tTextEditor& textEditor,\n\t std::size_t start,\n\t std::size_t end\n)
    + ~PasteCommand()
}

class ZoomEditorCommand {
    - float zoom
    + ZoomEditorCommand(\n\tTextEditor& textEditor,\n\t float zoom\n)
    + ~ZoomEditorCommand()
}

class Client {
   - TextEditor textEditor
   - Renderer renderer
   - bool quit
   - void pollEvent()
   + Client(int width, int height)
   + void run()
}

class Renderer {
    - int width
    - int height
    - TTF_Font* font
    - SDL_Renderer* renderer{}
    - SDL_Window* window{}
    + void drawText(std::string text, size_t cursorStart, size_t cursorEnd, float font_scale) const
    + void drawCursor(int x, int y, int w, int h) const
    + void render() const
    + Renderer(int width, int height)
    + void clear() const
    + void resize(int width, int height)
    + ~Renderer()
}

class TextEditor {
    - Command* command
    - std::string textBuffer
    - std::string clipboard
    - std::size_t positio
    - std::size_t selectionStart
    - std::size_t selectionEnd
    - float fontScale
    + std::string getTextBuffer()
    + void setTextBuffer(std::string t)
    + std::string getClipboard()
    + void setClipboard(std::string c)
    + std::size_t getPosition() const
    + void setPosition(std::size_t p)
    + std::size_t getSelectionStart() const
    + void setSelectionStart(std::size_t start)
    + std::size_t getSelectionEnd() const
    + void setSelectionEnd(std::size_t end)
    + float getFontScale() const
    + void setFontScale(float font_scale)
    + void draw(const Renderer& renderer) const
    + void setCommand(Command* cmd)
    + void keyPressed(bool ctrl, bool alt, bool shift, char key)
    + void keyPressed(bool ctrl, bool alt, bool shift, SDL_KeyCode key)
    + void executeCommand()
    + void undoCommand()
    + ~TextEditor()
    + TextEditor()
}

class Texture {
    - SDL_Texture* texture
    - SDL_Rect rect
    - SDL_Surface* surface
    + Texture(const std::string& text, TTF_Font* font, SDL_Renderer* renderer, int x, int y)
    + void draw(SDL_Renderer* renderer) const
    + ~Texture()
}

Command <|.. MoveCursorCommand
Command <|.. EnterCharCommand
Command <|.. DeleteTextCommand
Command <|.. CopyCommand
Command <|.. PasteCommand
Command <|.. CutCommand
Command <|.. ZoomEditorCommand

Client *--> TextEditor
TextEditor o---> Command
Renderer --> Texture
Client *--> Renderer
@enduml